g3 + geom_text(stat = "count", aes(label = after_stat(count)), vjust = -1)
ggplot(dataset, aes(x = sepal.sirka, y = petal.dlzka)) + geom_line()
data <- sample(1:100, 50, replace=TRUE) 
data2 <- sample(1:20, 50, replace=TRUE) 
data2
data2
index <- seq(1:50)
data <- data.frame(index, data, data2)
data
ggplot() + geom_line
ggplot(data, aes(x = index, y = data)) + geom_line()
ggplot(data, aes(x = index, y = data2)) + geom_line()
ggplot(data, aes(x = index, y = data2)) + geom_line(linetype = "dashed")
ggplot(data, aes(x = index, y = data2)) + geom_line(linetype = "twodash")
ggplot(data, aes(x = index, y = data2)) + geom_line(linetype = "dotted")
ggplot(data, aes(x = index, y = data2)) + geom_line(color = "red")
ggplot(data, aes(x = index, y = data2)) + geom_line(color = "red") + geom_point()
ggplot(data, aes(x = index)) + geom_line(aes(y = data)) + geom_line(aes(y = data2))
ggplot(data, aes(x = index)) + geom_line(aes(y = data, color = "blue")) + geom_line(aes(y = data2))
ggplot(data, aes(x = index)) + geom_line(aes(y = data, color = "blue")) + geom_line(aes(y = data2, color = "red"))
ggplot(data, aes(x = index)) + geom_line(aes(y = data), linetype = "dashed") + geom_line(aes(y = data2))
ggplot(data, aes(x = index)) + geom_line(aes(y = data), linetype = "dashed") + geom_line(aes(y = data2), linetype = "doted")
ggplot(data, aes(x = index)) + geom_line(aes(y = data), linetype = "dashed") + geom_line(aes(y = data2))
ggplot(data, aes(x = index)) + geom_line(aes(y = data), linetype = "dashed") + geom_line(aes(y = data2), linetype = "dotted")
ggplot(data, aes(x = index)) + geom_line(aes(y = data), linetype = "dashed") + geom_line(aes(y = data2), linetype = "dotted") + theme_bw()
q()
dataset <- read.table("iris.data", header = TRUE, sep = ",")
q()
dataset <- read.table("iris.data", header = TRUE, sep = ",")
require(ggplot2)
data1 <- ggplot(dataset, aes(petal.šírka))
data1
data1 <- ggplot(dataset, aes(petal.sirka))
data1
data1 <- ggplot(dataset, aes(x = petal.sirka, y = sepal.sirka)) + geom_line()
data1
data2 <- ggplot(dataset, aes(x = petal.dlzka, y = sepal.dlzka)) + geom_line
data2 <- ggplot(dataset, aes(x = petal.dlzka, y = sepal.dlzka)) + geom_line()
grid.arrange(data1, data2, ncol = 2)
require(gridExtra)
grid.arrange(data1, data2, ncol = 2)
data1 <- ggplot(dataset, aes(x = petal.sirka, y = sepal.sirka)) + geom_point()
data2 <- ggplot(dataset, aes(x = petal.dlzka, y = sepal.dlzka)) + geom_point()
grid.arrange(data1, data2, ncol = 2)
grid.arrange(data1, data2, ncol = 2) + ggtitle("Náš krásny graf")
data1 <- ggplot(dataset, aes(x = petal.sirka, y = sepal.sirka)) + geom_point() + ggtitle("Náš 1 graf")
data2 <- ggplot(dataset, aes(x = petal.dlzka, y = sepal.dlzka)) + geom_point() + ggtitle("Náš 2 graf")
grid.arrange(data1, data2, ncol = 2)
q()
grid.arrange(data1, data2, ncol = 2)
require(gridExtra)
grid.arrange(data1, data2, ncol = 2)
data1 + xlab("Petal sirka") + ylab
data1 + xlab("Petal sirka") + ylab("Sepal sirka")
require(ggplot2)
data1 + xlab("Petal sirka") + ylab("Sepal sirka")
data1 <- data1 + xlab("Petal sirka") + ylab("Sepal sirka")
grid.arrange(data1, data2, ncol = 2)d
data1 <- data1 + theme_bw()
data1
q()
dataset <- read.table("iris.data", header = TRUE, sep = ",")
require(ggplot2)
require(gridExtra)
data1 <- ggplot(dataset, aes(petal.šírka))
data1
data1 <- ggplot(dataset, aes(petal.sirka))
data1
data1 <- ggplot(dataset, aes(x = petal.sirka, y = sepal.sirka)) + geom_line()
data1
data2 <- ggplot(dataset, aes(x = petal.dlzka, y = sepal.dlzka)) + geom_line
data2 <- ggplot(dataset, aes(x = petal.dlzka, y = sepal.dlzka)) + geom_line()
grid.arrange(data1, data2, ncol = 2)
data1 <- ggplot(dataset, aes(x = petal.sirka, y = sepal.sirka)) + geom_point()
data2 <- ggplot(dataset, aes(x = petal.dlzka, y = sepal.dlzka)) + geom_point()
grid.arrange(data1, data2, ncol = 2)
data1 <- ggplot(dataset, aes(x = petal.sirka, y = sepal.sirka)) + geom_point() + ggtitle("Náš 1 graf")
data2 <- ggplot(dataset, aes(x = petal.dlzka, y = sepal.dlzka)) + geom_point() + ggtitle("Náš 2 graf")
grid.arrange(data1, data2, ncol = 2)
# Labels
data1 + xlab("Petal sirka") + ylab("Sepal sirka")
data1 <- data1 + xlab("Petal sirka") + ylab("Sepal sirka")
grid.arrange(data1, data2, ncol = 2)d
data1 <- data1 + theme_bw()
data1
dataset <- read.table("iris.data", header = TRUE, sep = ",")
cor(dataset[,1:4])
# 29.11
q()
# 29.11. 
dataset <- read.table("iris.data", header = TRUE, sep = ",")
cor(dataset[,1:4])
install.packages("dplyr")
install.packages("broom")
install.packages("ggpubr")
install.packages("DAAG")
install.packages("party")
install.packages("rpart")
install.packages("tree")
install.packages("rpart.plot")
install.packages("caret")
library(ggplot)
library(ggplot2)
library(dplyr)
library(broom)
library(ggpubr)
graf <- ggplot(dataset, aes(x=petal.dlzka,y=sepal.dlzka)) + geom_point() + theme_bw()
graf
graf + geom_smooth(method = "lm", col = "red")
graf + geom_smooth(method = "lm", col = "red") + stat_regline_equation()
lr1 <- lm(sepal.dlzka ~ petal.dlzka, data = dataset)
summary(lr1)
nove <- data.frame(petal.dlzka = 5)
predict(lr1, newdata = nove)
graf + geom_smooth(method = "loess", col = "red") + stat_regline_equation()
nove <- data.frame(petal.dlzka = 3.5)
predict(lr1, newdata = nove)
graf + geom_smooth(method = "loess", col = "red")
lr2 <- loess(sepal.dlzka ~ petal.dlzka, data = dataset)
nove <- data.frame(petal.dlzka = 5)
predict(lr2, newdata = nove)
predict(lr2, newdata = nove)
nove <- data.frame(petal.dlzka = 5)
predict(lr2, newdata = nove)
nove <- data.frame(petal.dlzka = 3)
predict(lr2, newdata = nove)
graf + geom_smooth(method = "loess", col = "blue")
# Stromy
library(DAAG)
library(party)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(pROC)
vzorka <- sample(2, nrow(dataset), replace = T, prob = c(0.5, 0.5))
trenovacie <- dataset[vzorka == 1,]
testovacie <- dataset[vzorka == 2,]
summary(trenovacie)
stromec <- rpart(trieda~., data = trenovacie)
summary(stromec)
rpart.plot(stromec)
pred <- predict(stromec, testovacie, type = 'class')
table(pred, testovacie$trieda)
install.packages("randomForest")
version
q()
# 6.12
data <- read.table("iris.data", header = T, sep = ",")
head(data)
install.packages("kohonen")
require(kohonen)
trenovacie <- as.matrix(data[,1:4])
siet <- somgrid(xdim = 8, ydim = 8, topo = "hexagonal")
somka <- som(trenovacie, grid = siet, rlen = 100)
plot(somka, "changes")
plot(somka, "count")
plot(somka, "mapping")
plot(somka, "quality")
plot(somka, "dist.neighbours")
data <- read.table("data.txt", header = F, sep = ",")
head (data)
data <- data[,2:65]
head(data)
summary(data)
trenovacie <- as.matrix(data)
siet <- somgrid(xdim = 20, ydim = 10, topo = "rectangular")
somka <- som(trenovacie, grid = siet, rlen = 100)
plot(somka, "changes")
plot(somka, "changes")
plot(somka, "changes")
plot(somka, "count")
plot(somka, "mapping")
plot(somka, "quality")
siet <- somgrid(xdim = 10, ydim = 5, topo = "rectangular")
somka <- som(trenovacie, grid = siet, rlen = 100)
plot(somka, "changes")
plot(somka, "count")
summary(somka)
q()
dataset <- read.table("iris.data", header = T, sep = ",")
head(dataset)
require(ggplot2)
ggplot(dataset, aes(x = sepal.sirka, y = sepal.dlzka))
ggplot(dataset, aes(x = sepal.sirka, y = sepal.dlzka)) + geom_point()
cor(data[,1:4], method = "pearson")
cor(dataset[,1:4], method = "pearson")
ggplot(dataset, aes(x = petal.dlzka, y = petal.sirka)) + geom_point()
graf <- ggplot(dataset, aes(x=petal.dlzka,y=sepal.dlzka)) + geom_point() + theme_bw()
graf
graf + geom_smooth(method = "lm", col = "red")
graf + geom_smooth(method = "lm", col = "red")
dataset <- read.table("iris.data", header = TRUE, sep = ",")
head(dataset)
cor(data[,1:4], method = "pearson")
cor(dataset[,1:4], method = "pearson")
ggplot(dataset, aes(x = petal.sirka, y = petal.dlzka)) + geom_point()
ggplot(dataset, aes(x = petal.sirka, y = petal.dlzka)) + geom_point(aes(color = sepal.dlzka))
ggplot(dataset, aes(x = petal.sirka, y = petal.dlzka)) + geom_point(aes(color = sepal.dlzka, size = sepal.sirka))
ggplot(dataset, aes(x = petal.sirka, y = petal.dlzka)) + geom_point(aes(color = sepal.dlzka, size = sepal.sirka)) + geom_smooth(method = "lm", col = "red")
graf2 <- ggplot(dataset, aes(x = petal.sirka, y = petal.dlzka))
grid.arrange(graf, graf2, ncol = 2)
require(gridExtra)
grid.arrange(graf, graf2, ncol = 2)
graf2 <- ggplot(dataset, aes(x = petal.sirka, y = petal.dlzka)) + geom_point()
grid.arrange(graf, graf2, ncol = 2)
ggplot(dataset, aes(sepal.dlzka)) + geom_bar()
ggplot(dataset, aes(x = factor(sepal.dlzka))) + geom_bar()
ggplot(dataset, aes(x = factor(sepal.dlzka))) + geom_point()
ggplot(dataset, aes(x = factor(sepal.dlzka), y = factor(sepal.sirka))) + geom_point()
cor(dataset[,1:4], method = "pearson")
mean(dataset$sepal.sirka)
min(dataset$sepal.sirka)
max(dataset$sepal.sirka)
library(ggplot)
library(ggplot2)
library(dplyr)
library(broom)
library(ggpubr)
graf <- ggplot(dataset, aes(x = petal.dlzka, y = sepal.dlzka)) + geom_point() + ggtitle("Graf 1")
graf
graf <- ggplot(dataset, aes(x = petal.dlzka, y = sepal.dlzka)) + geom_point() + ggtitle("Graf 1") + theme_bb()
graf <- ggplot(dataset, aes(x = petal.dlzka, y = sepal.dlzka)) + geom_point() + ggtitle("Graf 1") + theme_bw()
graf
rl1 <- lm(sepal.dlzka ~ petal.dlzka, data = dataset)
summary(rl1)
nove <- data.frame(petal.dlzka = 5)
predict(rl1, newdata = nove)
graf <- ggplot(dataset, aes(x=petal.dlzka, y=sepal.sirka)) + geom_point() + theme_bw()
graf + geom_smooth(method = "lm", col = "red") + stat_regline_equation()
graf + geom_smooth(method = "lm", col = "red")
graf + geom_smooth(method = "lm", col = "red") + stat_regline_equation()
lr1 <- lm(sepal.dlzka ~ petal.dlzka, data = dataset)
summary(lr1)
nove <- data.frame(petal.dlzka = 5)
predict(lr1, newdata = nove)
nove <- dataset.frame(petal.dlzka = 5)
nove <- data.frame(petal.dlzka = 5)
vzorka <- sample(2, nrow(dataset), replace = T, prob = c(0.5, 0.5))
trenovacie <- dataset[vzorka == 1,]
testovacie <- dataset[vzorka == 2,]
summary(trenovacie)
summary(testovacie)
stromec <- rpart(trieda~., data = trenovacie)
library(DAAG)
library(party)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(pROC)
stromec <- rpart(triedalibrary(DAAG))
library(party)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
stromec <- rpart(trieda~., data = trenovacie)
rpart.plot(stromec)
pred <- predict(stromec, testovacie, type = 'class')
table(pred, testovacie$trieda)
dataset_2 <- read.table("data.txt", header = F, sep = ",")
cor(dataset[,1:65], method = "pearson")
cor(dataset_v2[,1:65], method = "pearson")
cor(dataset_2[,1:65], method = "pearson")
cor(dataset_2[,2:65], method = "pearson")
cor(dataset_2[,2:5], method = "pearson")
ggplot(dataset_2, aes(x=V2, y=V3)) + geom_point()
graf_1 <- ggplot(dataset_2, aes(x=V2, y=V3)) + geom_point()
graf_1 + geom_smooth(method = "lm", color = "red")
graf_1 <- graf_1 + geom_smooth(method = "lm", color = "red")
graf_1
graf_1 + ylab("Toto je y") + xlab("Toto je X")
graf_1 + ylab("Toto je y") + xlab("Toto je X") + ggtitle("Ahojte")
lr1 <- lm(V1 ~ V2, data = dataset_2)
lr1 <- lm(V2 ~ V3, data = dataset_2)
summary(lr1)
graf_1 + geom_smooth(method = "loess", color = "blue")
nove <- data.frame(V2 = 2)
predict(lr1, newdata = nove)
predict(lr1, newdata = nove)
nove <- data.frame(V3 = 2)
predict(lr1, newdata = nove)
nove
vzorka <- sample(2, nrow(dataset_2), replace = T, prob = c(0.5, 0.5))
trenovacie <- dataset_2[vzorka == 1]
trenovacie <- dataset_2[vzorka == 1,]
testovacie <- dataset_2[vzorka == 2,]
head(dataset_2)
stromec <- rpart(V1~., data = trenovacie)
rpart.plot(stromec)
graf1
graf_1
graf_1 <- graf_1 + geom_smooth(method = "loess", color = "blue")
graf_1
graf_2 <- rpart.plot(stromec)
grid.arrange(graf_1, graf_2, ncol = 2)
grid.arrange(graf_1, ncol = 2)
vzorka <- sample(2, nrow(dataset), replace = 5, prob = c(0.5, 0.5))
trenovacie <- dataset[vzorka == 1,]
testovacie <- dataset[vzorka == 2,]
vzorka <- sample(2, nrow(dataset), replace = T, prob = c(0.5, 0.5))
stromec <- rpart(trieda~., data = trenovacie)
pred <- predict(stromec, testovacie, type = 'class')
table(pred, testovacie$trieda)
plot(somka, "changes")
require(kohen)
require(kohonen)
dataset
trenovacie <- as.matrix(dataset[,1:4])
siet <- somgrid(xdim = 8, ydim = 8, topo = "hexagonal")
somka <- som(trenovacie, grid = siet, rlen = 100)
plot(somka, "changes")
plot(somka, "count")
cor(dataset[,1:4])
cor(dataset$sepal.dlzka, dataset$sepal.sirka, method = "pearson")
graf_3 <- ggplot(dataset, aes(x = sepal.dlzka, y = sepal.sirka)) + geom_point()
graf_3
graf_3 <- graf_3 + geom_smooth(method = "lm", color = "red")
graf_3
lr1 <- lm(sepal.dlzka ~ sepal.sirka, data = dataset)
summary(lr1)
dataset_3 <- load.table("iris.data", header = T, sep = ",")
dataset_3 <- read.table("iris.data", header = T, sep = ",")
head(dataset_3)
cor(dataset_3[,1:4], method = "spearman")
cor(dataset_3[,1:4], method = "pearson")
graf_1 <- ggplot(dataset_3, aes(x = petal.dlzka, y = petal.sirka)) + geom_point()
graf_1
graf_1 <- graf_1 + geom_smooth(method = "lm", color = "red")
graf_1
graf_2 <- ggplot(dataset_3, aes(x = petal.dlzka, y = petal.sirka)) + geom_point()
graf_2 <- graf_2 + geom_smooth(method = "loess", color = "blue")
graf_2
grid.arrange(graf_1, graf_2, ncol = 2)
lr1 <- lm(petal.dlzka ~ petal.sirka, data = dataset_3)
nove <- data.frame(petal.sirka = 3)
predict(lr1, newdata = nove)
vzorka <- sample(2, nrow(dataset_3), replace = T, prob = c(0.5, 0.5))
testovacie <- dataset_3[vzorka == 1,]
trenovacie <- dataset_3[vzorka == 2,]
stromec <- rpart(trieda~., data = testovacie)
rpart.plot(stromec)
pred <- predict(stromec, trenovacie, type = 'class')
table(pred, trenovacie$trieda)
trenovacie <- as.matrix(dataset_3[,1:4])
siet <- somgrid(xdim = 8, ydim = 8, topo = "hexagonal")
somka <- som(trenovacie, grid = siet, rlen = 100)
plot(somka, "changes")
plot(somka, "changes") + ylab("Iterácie")
vzorka <- sample(2, nrow(dataset_3), replace = T, prob = c(0.5. 0.5))
vzorka <- sample(2, nrow(dataset_3), replace = T, prob = c(0.5, 0.5))
trenovacie <- dataset_3[vzorka == 1,]
testovacie <- dataset_3[vzorka == 2,]
stromec <- rpart(trieda~., data = trenovacie)
rpart.plot(stromec)
pred <- predict(stromec, testovacie, type = 'class')
table(pred, testovacie$trieda)
trenovacie <- as.matrix(dataset_3[,1:4])
siet <- somgrid(xdim = 8, ydim = 8, topo = "rectangular")
somka <- som(trenovacie, grid = siet, rlen = 100)
plot(somka, "changes")
dataset <- read.table("iris.data", header = T, sep = ",")
cor(dataset[,1:4], method = "pearson")
graf_1 <- ggplot(dataset, aes(x = sepal.dlzka, y = petal.dlzka)) + geom_point(aes(color = sepal.sirka))
graf_1
graf_1 <- ggplot(dataset, aes(x = sepal.dlzka, y = petal.dlzka)) + geom_point()
graf_1
graf_1 <- graf_1 + geom_smooth(method = "lm", color = "red")
graf_1
lr1 <- (sepal.sirka ~ sepal.dlzka, data = dataset)
lr1 <- lm(sepal.sirka ~ sepal.dlzka, data = dataset)
nove <- data.frame(sepal.sirka = 3)
predict(lr1, newdata = nove)
nove <- data.frame(sepal.dlzka = 3)
predict(lr1, newdata = nove)
dataset <- read.table("iris.data", header = T, sep = ",")
cor(dataset[,1:4], method = "spearman")
graf_1 <- ggplot(dataset, aes(x = petal.dlzka, y = petal.sirka)) + geom_point()
graf_1
graf_1 <- ggplot(dataset, aes(x = petal.dlzka, y = petal.sirka)) + geom_point(size = sepal.dlzka)
graf_1 <- ggplot(dataset, aes(x = petal.dlzka, y = petal.sirka)) + geom_point(aes(size = sepal.dlzka))
graf_1
graf_1 <- ggplot(dataset, aes(x = petal.dlzka, y = petal.sirka)) + geom_point() + geom_smooth(method = "lm", color = "red")
graf_1
graf_2 <- ggplot(dataset, aes(x = petal.dlzka, y = petal.sirka)) + geom_point() + geom_smooth(method = "loess", color = "blue")
grid.arrange(graf_1, graf_2, ncol = 2)
nove <- data.frame(petal.sirka = 3)
lr1 <- lm(petal.dlzka ~ petal.sirka, data = dataset)
predict(lr1, newdata = nove)
vzorka <- sample(2, nrow(dataset), replace = T, prob = c(0.5, 0.5))
trenovacie <- dataset[vzorka == 1,]
testovacie <- dataset[vzorka == 2,]
stromec <- rpart(trieda~., data = trenovacie)
pred <- predict(stromec, testovacie, type = 'class')
talbe(pred, testovacie$trieda)
table(pred, testovacie$trieda)
trenovacie <- as.matrix(data[,1:4])
siet <- somgrid(xdim = 8, ydim = 8, topo = "hexagonal")
somka <- som(trenovacie, grid = siet, rlen = 100)
plot(somka, "changes")
cor(dataset[,2:4], method = "spearman")
cor(dataset[,0:4], method = "spearman")
graf_2 <- ggplot(dataset, aes(x = petal.dlzka, y = petal.sirka)) + geom_point() + geom_smooth(method = "loess", color = "blue") + stat_regline_equation()
graf_2
lesik <- randomForest(as.factor(trieda)~., data = trenovacie)
library(DAAG)
library(party)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(pROC)
data <- sample(1:100, 50, replace = TRUE)
data2 <- sample(1:20, 50, replace = TRUE)
head(data)
index <- seq(1:50)
index
data <- data.frame(index, data, data2)
data
g3 <- ggplot(dataset, aes(x = factor(sepal.dlzka), fill = trieda)) + geom_bar()
g3
g3 <- g3 + geom_text(stat = count, aes(label = after_stat(count)))
g3 <- g3 + geom_text(stat = "count", aes(label = after_stat(count)))
g3
g4 <- ggplot(dataset, aes(x = index, y = data2)) + geom_line()
g4
g4 <- ggplot(data, aes(x = index, y = data2)) + geom_line()
g4
g4 <- ggplot(data, aes(x = index, y = data2)) + geom_line(linetype = "dashed")
g4
g5 <- ggplot(data, aes(x = index, y = data)) + geom_line(linetype = "dashed")
g5
grid.arrange(g4, g5, ncol = 2)
g2 <- ggplot(dataset, aes(x = factor(sepal.dlzka))) + geom_point()
g2

g2
g2 <- ggplot(dataset, aes(x = factor(sepal.dlzka))) + geom_point() + labs(x = "New x axis label", title = "Title")
g2
g2 <- ggplot(dataset, aes(x = factor(sepal.dlzka))) + geom_bar() + labs(x = "New x axis label", title = "Title")
g2
dataset_4 <- read.table("data.txt", header = F, sep = ",")
cor(dataset_4[,1:4], method = "pearson")
cor(dataset_4[,2:4], method = "pearson")
g6 <- ggplot(dataset_4, aes(x = V2, y = V3)) + geom_point(aes(size = V4))
g6
g6 <- ggplot(dataset_4, aes(x = V2, y = V3)) + geom_point()
g6
g6 <- g6 + geom_smooth(method = "lm", color = "green")
g6
g6 <- ggplot(dataset_4, aes(x = V2, y = V3)) + geom_point(aes(size = V4, color = V5))
g6
~
nove <- data.frame(V2 = 2)
lr1 <- lm(V2 ~ V3, data = dataset_4)
predict(lr1, newdata = nove)
nove <- data.frame(V3 = 2)
nove
predict(lr1, newdata = nove)
g6 <- ggplot(dataset_4, aes(x = V2, y = V3)) + geom_line(color = "red")
g6
g6 <- ggplot(dataset_4, aes(x = V2, y = V3)) + geom_point(color = "red")
g6
require(randomForest)
require("randomForest")
install.packages("randomForest")
dataset <- read.table("Raisin_Dataset.csv", header = T, sep = ",")
head(dataset)
cor(dataset[,1:7], method = "pearson")
cor(dataset[,1:6], method = "pearson")
cor(dataset[,1:5], method = "pearson")
cor(dataset[,1:4], method = "pearson")
cor(dataset[,2:3], method = "pearson")
cor(dataset[,2:4], method = "pearson")
head(dataset)
cor(dataset[,1:4], method = "pearson")
cor(dataset[,1:7], method = "pearson")
cor(dataset[,2:7], method = "pearson")
cor(x = dataset, dataset[,2:7], method = "pearson")
corlation <- cor(x=dataset[:1,7], method="pearson")
cor(dataset[:1,7], method = "pearson")
cor(dataset[,1:7], method = "pearson")
corlation <- cor(x=dataset[,1:7], method="pearson")
dataset <- read.table("Raisin_Dataset.csv", header = T, sep = ";")
cor(dataset[,1:7], method = "pearson")
g1 <- ggplot(dataset, aes(x = ConvexArea, y = Perimeter)) + geom_point(aes(color = Area))
g1
noveData <- data.frame(MajorAxisLength = 430.12, MinorAxisLength = 284.00, Eccentricity = 0.7650, Extent = 0.76532, Perimeter = 1208.702, Class = Besni)
noveData <- data.frame(MajorAxisLength = 430.12, MinorAxisLength = 284.00, Eccentricity = 0.7650, Extent = 0.76532, Perimeter = 1208.702, Class = "Besni")
lr1 -> lm(MajorAxisLength ~ MinorAxisLength, data = dataset)
lr1 <- lm(sepal.dlzka ~ petal.dlzka, data = dataset)
lr1 <- lm(MajorAxisLength ~ MinorAxisLength, data = dataset)
predict(lr1, Area)
vzorka <- sample(2, nrow(dataset), replace = T, prob = c(0.5, 0.5))
testovacie <- dataset[vzorka == 1,]
trenovacie <- dataset[vzotka == 2,]
trenovacie <- dataset[vzorka == 2,]
stromec <- rpart(Class~., data = trenovacie)
rpart.plot(stromec)
newData <- data.frame(MajorAxisLength = 430.12, MinorAxisLength = 284, Eccentricity = 0.765, Extent = 0.76532, Perimeter = 1208.702, Class = "Besni")
lr1 <- lm(Area ~ Perimeter, data = dataset)
predict(lr1, newdata = newData)
g1 <- ggplot(dataset, aes(x = Area, y = Perimeter)) + geom_point()
g1
g1 <- g1 + geom_smooth(method = "lm", color = "red")
g1
newData
lr1 <- lm(ConvexArea ~ Perimeter, data = dataset)
predict(lr1, newdata = newData)
rpart.plot(stromec)
q()
